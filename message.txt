void loop()
{
  // Check if a client has connected
  WiFiClient client = server.accept();
  if (!client)
  {
    return;
  }
  Serial.println(F("new client"));

  client.setTimeout(5000); // default is 1000

  // Read the first line of the request
  String req = client.readStringUntil('\r');
  Serial.println(F("request: "));
  Serial.println(req);

  // Match the request

  if (req.indexOf(F("/gpio/0")) != -1)
  {
    valr = 0;
    valy = 0;
    valg = 0;
  }
  else if (req.indexOf(F("/gpio/r")) != -1)
  {
    valr = 1;
  }
  else if (req.indexOf(F("/gpio/y")) != -1)
  {
    valy = 1;
  }
  else if (req.indexOf(F("/gpio/g")) != -1)
  {
    valg = 1;
  }
  else
  {
    Serial.println(F("invalid request"));
    valr = digitalRead(D0);
  }

  // Set LED according to the request
  digitalWrite(D0, valr);
  digitalWrite(D1, valy);
  digitalWrite(D2, valg);

  // read/ignore the rest of the request
  // do not client.flush(): it is for output only, see below
  while (client.available())
{
  // byte by byte is not very efficient
  client.read();
}

  // Send the response to the client
  // it is OK for multiple small client.print/write,
  // because nagle algorithm will group them into one single packet
  client.print(F("HTTP/1.1 200 OK\r\nContent-Type: text/html\r\n\r\n<!DOCTYPE HTML>\r\n<html>\r\nGPIO is now "));
  client.print((valr) ? F("high") : F("low"));
  client.print(F("<br><br>Click <a href='http://"));
  client.print(WiFi.localIP());
  client.print(F("/gpio/r'>here</a> RED On, or <a href='http://"));
  client.print(WiFi.localIP());
  client.print(F("/gpio/y'>here</a> YELLOW ON, or <a href='http://"));
  client.print(WiFi.localIP());
  client.print(F("/gpio/g'>here</a> GREEN ON, or <a href='http://"));
  client.print(WiFi.localIP());
  client.print(F("/gpio/0'>here</a> to switch LED GPIO off.</html>"));

  // The client will actually be *flushed* then disconnected
  // when the function returns and 'client' object is destroyed (out-of-scope)
  // flush = ensure written data are received by the other side
  Serial.println(F("Disconnecting from client"));
}